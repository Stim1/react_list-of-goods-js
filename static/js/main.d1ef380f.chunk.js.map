{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_BY_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","sortedGoods","goods","field","sort","a","b","localeCompare","length","reverse","sortGoods","isResetVisible","className","cn","onClick","type","prevState","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,sBAC5BC,EAAuB,iBAuBhBC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAzBU,SAACC,EAAOC,EAAOJ,GAC/B,IAAME,EAAW,YAAOC,GAExB,OAAQC,GACN,KAAKV,EACHQ,EAAYG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3C,MACF,KAAKZ,EACHO,EAAYG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAU5C,OAJIT,GACFE,EAAYQ,UAGPR,EAOaS,CAAUlB,EAAiBK,EAAWE,GACpDY,EAAiBZ,GAAcF,EAWrC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEA,UAAWC,IAAG,SAAU,CACtB,UAAWhB,IAAcJ,EACzB,mBAAoBI,IAAcJ,IAEpCqB,QAAS,WACPhB,EAAaL,IAEfsB,KAAK,SARP,iCAaA,wBACEH,UAAWC,IAAG,SAAU,CACtB,aAAchB,IAAcH,EAC5B,sBAAuBG,IAAcH,IAEvCoB,QAAS,WACPhB,EAAaJ,IAEfqB,KAAK,SARP,4BAaA,wBACEH,UAAWC,IAAG,SAAU,CACtB,aAAcd,EACd,uBAAwBA,IAE1Be,QAtCc,WACpBd,GAAc,SAAAgB,GAAS,OAAKA,MAsCtBD,KAAK,SANP,qBAWCJ,GACD,wBACEG,QAnDsB,WAC5BhB,EAAa,IACbE,GAAc,IAkDRe,KAAK,SACLH,UAAWC,IAAG,SAAU,sBAH1B,sBAUF,6BACGZ,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC5GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d1ef380f.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'Sort alphabetically';\nconst SORT_FIELD_BY_LENGTH = 'Sort by length';\n\nconst sortGoods = (goods, field, isReversed) => {\n  const sortedGoods = [...goods];\n\n  switch (field) {\n    case SORT_FIELD_ALPHABETICALLY:\n      sortedGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SORT_FIELD_BY_LENGTH:\n      sortedGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n};\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = sortGoods(goodsFromServer, sortField, isReversed);\n  const isResetVisible = isReversed || sortField;\n\n  const isResetVisibleHandler = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  const toggleReverse = () => {\n    setIsReversed(prevState => !prevState);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          className={cn('button', {\n            'is-info': sortField === SORT_FIELD_ALPHABETICALLY,\n            'is-info is-light': sortField !== SORT_FIELD_ALPHABETICALLY,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_ALPHABETICALLY);\n          }}\n          type=\"button\"\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className={cn('button', {\n            'is-success': sortField === SORT_FIELD_BY_LENGTH,\n            'is-success is-light': sortField !== SORT_FIELD_BY_LENGTH,\n          })}\n          onClick={() => {\n            setSortField(SORT_FIELD_BY_LENGTH);\n          }}\n          type=\"button\"\n        >\n          Sort by length\n        </button>\n\n        <button\n          className={cn('button', {\n            'is-warning': isReversed,\n            'is-warning is-light': !isReversed,\n          })}\n          onClick={toggleReverse}\n          type=\"button\"\n        >\n          Reverse\n        </button>\n\n        {isResetVisible && (\n        <button\n          onClick={isResetVisibleHandler}\n          type=\"button\"\n          className={cn('button', 'is-danger is-light')}\n        >\n          Reset\n        </button>\n        )}\n\n      </div>\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}